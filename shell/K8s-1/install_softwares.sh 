#!/bin/bash
cat > /etc/sysctl.conf<<EOF
net.ipv4.tcp_slow_start_after_idle=0
net.core.rmem_max=16777216
fs.inotify.max_user_watches=524288
kernel.softlockup_all_cpu_backtrace=1
kernel.softlockup_panic=1
fs.file-max=2097152
fs.nr_open=2097152
fs.inotify.max_user_instances=8192
fs.inotify.max_queued_events=16384
vm.max_map_count=262144
net.core.netdev_max_backlog=16384
net.ipv4.tcp_wmem=4096 12582912 16777216
net.core.wmem_max=16777216
net.core.somaxconn=32768
net.ipv4.ip_forward=1
net.ipv4.tcp_timestamps=0
net.ipv4.tcp_max_syn_backlog=8096
net.bridge.bridge-nf-call-iptables=1
net.bridge.bridge-nf-call-ip6tables=1
net.bridge.bridge-nf-call-arptables=1
net.ipv4.tcp_rmem=4096 12582912 16777216
vm.swappiness=0
kernel.sysrq=1
net.ipv4.neigh.default.gc_stale_time=120
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0
net.ipv4.conf.default.arp_announce=2
net.ipv4.conf.lo.arp_announce=2
net.ipv4.conf.all.arp_announce=2
net.ipv4.tcp_max_tw_buckets=5000
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_synack_retries=2
#net.ipv6.conf.lo.disable_ipv6=1
#net.ipv6.conf.all.disable_ipv6=1
#net.ipv6.conf.default.disable_ipv6=1
net.ipv4.ip_local_port_range=1024 65535
net.ipv4.tcp_keepalive_time=600
net.ipv4.tcp_keepalive_probes=10
net.ipv4.tcp_keepalive_intvl=30
net.nf_conntrack_max=25000000
net.netfilter.nf_conntrack_max=25000000
net.netfilter.nf_conntrack_tcp_timeout_established=180
net.netfilter.nf_conntrack_tcp_timeout_time_wait=120
net.netfilter.nf_conntrack_tcp_timeout_close_wait=60
net.netfilter.nf_conntrack_tcp_timeout_fin_wait=12
EOF

cat >>  /etc/security/limits.conf  <<EOF
*   soft    nofile  655350
*   hard    nofile655350
*   soft    nproc   655350
*   hard    nproc   655350
*   soft    core    unlimited
*   hard    core    unlimited
EOF

sed -i "s#4096#655350#g" /etc/security/limits.d/20-nproc.conf

cat >> /etc/profile <<EOF
ulimit -u 65535
ulimit -n 65535
ulimit -d unlimited
ulimit -m unlimited
ulimit -s unlimited
ulimit -v unlimited
ulimit -t unlimited
ulimit -c unlimited
EOF

## 加载内核

if [ -f /etc/sysconfig/modules/k8s.modules ];then
    rm -f /etc/sysconfig/modules/k8s.modules
fi
       touch /etc/sysconfig/modules/k8s.modules
    chmod +x /etc/sysconfig/modules/k8s.modules


cat > ipvs.sh <<EOF
ipvs_mods_dir="/usr/lib/modules/`uname -r`/kernel/net/netfilter/ipvs"
for i in \$(ls \$ipvs_mods_dir|grep -o "^[^.]*" )
do
  /sbin/modinfo -F filename \$i &>/dev/null
  if [ \$? -eq 0 ];then
        /sbin/modprobe \$i
        echo "/sbin/modprobe \$i" >> /etc/sysconfig/modules/k8s.modules
  fi
done
EOF
cat >> /etc/sysconfig/modules/k8s.modules << EOF
modprobe br_netfilter
modprobe ip_conntrack
EOF

## 加载ipvs模块
sh ipvs.sh
## 验证
lsmod |grep ip

source /etc/profile

sysctl -p

Containerd_Version=1.7.13
Runc_Version=1.1.12
Nerdctl_Version=1.7.3
Http_Proxy="https://mirror.ghproxy.com/"

wget ${Http_Proxy}https://github.com/containerd/containerd/releases/download/v${Containerd_Version}/containerd-${Containerd_Version}-linux-amd64.tar.gz -O containerd-linux-amd64.tar.gz
wget ${Http_Proxy}https://raw.githubusercontent.com/containerd/containerd/main/containerd.service -O containerd.service

mv containerd.service /usr/lib/systemd/system/

tar Cxzvf /usr/local containerd-linux-amd64.tar.gz
wget ${Http_Proxy}https://github.com/opencontainers/runc/releases/download/v${Runc_Version}/runc.amd64 -O runc.amd64
install -m 755 runc.amd64 /usr/local/sbin/runc
runc -v
mkdir -p /etc/containerd

containerd config default |tee /etc/containerd/config.toml

sed -i s#registry.k8s.io#k8s.m.daocloud.io#g /etc/containerd/config.toml
sed -i s#SystemdCgroup = false#SystemdCgroup = true#g /etc/containerd/config.toml

systemctl enable --now  containerd
systemctl status containerd
wget ${Http_Proxy}https://github.com/containerd/nerdctl/releases/download/v${Nerdctl_Version}/nerdctl-${Nerdctl_Version}-linux-amd64.tar.gz -O nerdctl-linux-amd64.tar.gz
tar Czxvf /usr/local/bin/  nerdctl-linux-amd64.tar.gz
nerdctl -h

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

yum install -y kubelet  kubectl kubeadm
systemctl enable kubelet && systemctl start kubelet
shutdown -r  now
